name: Deploy (FTPS) to Hostinger

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, bcmath, pdo_mysql, zip
          coverage: none

      - name: Install PHP dependencies (Composer)
        run: composer install --no-dev --prefer-dist --optimize-autoloader

      # Apenas para gerar APP_KEY durante o build (NÃO envia .env)
      - name: Prepare .env for build key (not deployed)
        run: |
          if [ ! -f .env ]; then cp .env.example .env; fi
          php artisan key:generate

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install & Build (Vite)
        run: |
          npm ci
          npm run build

      - name: Prepare deploy folder
        run: |
          set -e
          rm -rf deploy
          mkdir -p deploy

          # Copia TODO o projeto para deploy/ (sem .env, node_modules, .github etc.)
          rsync -a \
            --delete \
            --exclude=".git" \
            --exclude=".github" \
            --exclude="node_modules" \
            --exclude="tests" \
            --exclude="deploy" \
            --exclude=".env" \
            --exclude="storage/logs/*" \
            --exclude="storage/framework/sessions/*" \
            --exclude="storage/framework/cache/*" \
            --exclude="storage/framework/views/*" \
            --exclude=".ftp-deploy-sync-state.json" \
            ./ deploy/

          # index.php ponte na RAIZ do docroot -> public/index.php (sem /assetsme)
          printf "%s\n" "<?php require __DIR__ . '/public/index.php';" > deploy/index.php

          # .htaccess forte em public/assets (sempre cria)
          mkdir -p deploy/public/assets
          printf "%s\n" \
            "Options -Indexes" \
            "<FilesMatch \"\\.(php|phar|phtml)$\">" \
            "  Deny from all" \
            "</FilesMatch>" \
            "<IfModule mod_headers.c>" \
            "  <FilesMatch \"\\.(jpg|jpeg|png|gif|webp|svg|css|js|woff2?)$\">" \
            "    Header set Cache-Control \"public, max-age=31536000, immutable\"" \
            "    Header set Access-Control-Allow-Origin \"*\"" \
            "  </FilesMatch>" \
            "</IfModule>" \
            > deploy/public/assets/.htaccess

          # Sentinela para conferência
          date -u > deploy/_deploy-check.txt

      - name: Debug - list deploy content
        run: |
          echo "---- TREE deploy/ (até 3 níveis) ----"
          find deploy -maxdepth 3 -type f | sed 's/^/  /'
          echo "--------------------------------------"

      - name: Deploy via FTPS
        uses: SamKirkland/FTP-Deploy-Action@v4.3.6
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: ftps
          # >>> aponte para o Document Root exato do cdn.omixfy.com (ex.: /public_html ou /public_html/cdn)
          server-dir: ${{ secrets.FTP_SERVER_DIR }}/
          local-dir: deploy/
          state-name: .ftp-deploy-sync-state.json
          # Força um full sync no primeiro push para evitar "só pastas"
          dangerous-clean-slate: true
          exclude: |
            **/.git*
            **/.github/**
            **/node_modules/**
            **/.env
            **/storage/logs/**
            **/storage/framework/cache/**
            **/storage/framework/sessions/**
            **/storage/framework/views/**
            **/.ftp-deploy-sync-state.json
